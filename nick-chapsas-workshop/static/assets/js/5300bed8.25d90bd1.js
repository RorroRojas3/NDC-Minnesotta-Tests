"use strict";(self.webpackChunktesting_workshop=self.webpackChunktesting_workshop||[]).push([[6246],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=p(a),m=r,g=h["".concat(s,".").concat(m)]||h[m]||u[m]||i;return a?n.createElement(g,o(o({ref:t},c),{},{components:a})):n.createElement(g,o({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},3649:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={description:"Let's see how we can run an in-memory browser for our tests"},o="Introduction to Browser testing",l={unversionedId:"integration-testing/ui/browser-testing",id:"integration-testing/ui/browser-testing",title:"Introduction to Browser testing",description:"Let's see how we can run an in-memory browser for our tests",source:"@site/docs/integration-testing/ui/browser-testing.md",sourceDirName:"integration-testing/ui",slug:"/integration-testing/ui/browser-testing",permalink:"/integration-testing/ui/browser-testing",draft:!1,tags:[],version:"current",frontMatter:{description:"Let's see how we can run an in-memory browser for our tests"},sidebar:"docs",previous:{title:"Running Docker Compose",permalink:"/integration-testing/ui/dealing-with-docker-compose"},next:{title:"Our first UI integration test",permalink:"/integration-testing/ui/first-integration-test"}},s={},p=[{value:"An automatic flow",id:"an-automatic-flow",level:2},{value:"Installation",id:"installation",level:2},{value:"Scenario: Creating a customer",id:"scenario-creating-a-customer",level:2},{value:"Creating the infrastructure",id:"creating-the-infrastructure",level:3},{value:"Interacting with the page",id:"interacting-with-the-page",level:3},{value:"Test suite integration",id:"test-suite-integration",level:2}],c={toc:p};function u(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction-to-browser-testing"},"Introduction to Browser testing"),(0,r.kt)("p",null,"Since we are writing ",(0,r.kt)("strong",{parentName:"p"},"top-down tests"),' we need to have tests that interact with the browser since that\'s the "top" for our users.'),(0,r.kt)("p",null,"This is where a product called ",(0,r.kt)("a",{parentName:"p",href:"https://playwright.dev"},"Playwright")," comes in."),(0,r.kt)("h2",{id:"an-automatic-flow"},"An automatic flow"),(0,r.kt)("p",null,"Before we start using Playwright for our testing, let's first write our first automatic flow with it against our real application."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"First, let's install Playwright at the ",(0,r.kt)("inlineCode",{parentName:"p"},"Customers.WebApp.Auto")," project under ",(0,r.kt)("inlineCode",{parentName:"p"},"2.UiTesting/src"),".\nYou can install it as a Nuget package either by using your IDE's Nuget client or by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"dotnet add package Microsoft.Playwright\n")),(0,r.kt)("p",null,"Now build the project either using your IDE or by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},"dotnet build\n")),(0,r.kt)("p",null,"This will create a few files under the ",(0,r.kt)("inlineCode",{parentName:"p"},"Customers.WebApp.Auto\\bin\\Debug\\net6.0")," folder.\nWhat we need to do is run the file called ",(0,r.kt)("inlineCode",{parentName:"p"},"playwright.ps1"),". You will need to have powershell installed to run it.\nPowerShell is cross platform and can be installed ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell?view=powershell-7.2"},"here"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},"pwsh bin/Debug/netX/playwright.ps1 install\n")),(0,r.kt)("p",null,"Once that's done, you're ready to start writing your first flow."),(0,r.kt)("p",null,"An alternative to the approach above is to create a console app that only contains the following line, and run it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Microsoft.Playwright.Program.Main(new string[] {"install" });\n')),(0,r.kt)("h2",{id:"scenario-creating-a-customer"},"Scenario: Creating a customer"),(0,r.kt)("p",null,"Our goal here is to use Playwright, to automate the creation of a customer.\nThis is the view we are going to automate:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(6558).Z,width:"2511",height:"1221"})),(0,r.kt)("p",null,"We need to:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Navigate to ",(0,r.kt)("inlineCode",{parentName:"li"},"/add-customer")),(0,r.kt)("li",{parentName:"ol"},"Provide a valid full name"),(0,r.kt)("li",{parentName:"ol"},"Provide a valid email"),(0,r.kt)("li",{parentName:"ol"},"Provide a valid GitHub username"),(0,r.kt)("li",{parentName:"ol"},"Provide a valid date of birth"),(0,r.kt)("li",{parentName:"ol"},"Click the submit button")),(0,r.kt)("h3",{id:"creating-the-infrastructure"},"Creating the infrastructure"),(0,r.kt)("p",null,"Let's start by the infrastructure code needed. First we need to create an instance of Playwright itself:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"IPlaywright playwright = await Playwright.CreateAsync();\n")),(0,r.kt)("p",null,"We can then create an instance of the Browser:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"IBrowser browser = await playwright.Chromium.LaunchAsync();\n")),(0,r.kt)("p",null,"However, by default the browser will run headless which means we won't actually see a browser window.\nIt will also make the actions as fast as it can. To prevent that we will pass a ",(0,r.kt)("inlineCode",{parentName:"p"},"BrowserTypeLaunchOptions")," object to the ",(0,r.kt)("inlineCode",{parentName:"p"},"LaunchAsync"),"\nmethod to add ",(0,r.kt)("inlineCode",{parentName:"p"},"SlowMo")," and turn Headless off."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"IBrowser browser = await playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions\n{\n    SlowMo = 1000,\n    Headless = false\n});\n")),(0,r.kt)("p",null,"Before we create our ",(0,r.kt)("inlineCode",{parentName:"p"},"IPage")," object we need to create an ",(0,r.kt)("inlineCode",{parentName:"p"},"IBrowserContext"),". This will allow us to run in an isolated context of the\nbrowser without sharing data such as cookies and it also allows us to ignore invalid HTTPS certificates which can be a pain during testing:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"IBrowserContext browserContext = await browser.NewContextAsync(new BrowserNewContextOptions\n{\n    IgnoreHTTPSErrors = true\n});\n")),(0,r.kt)("p",null,"We can now finally create our ",(0,r.kt)("inlineCode",{parentName:"p"},"IPage")," object which is what we will be using to interact with the website page:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"IPage page = await browserContext.NewPageAsync();\n")),(0,r.kt)("p",null,"Let's start by navigating to the ",(0,r.kt)("inlineCode",{parentName:"p"},"/add-customer")," page:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.GotoAsync("https://localhost:5001/add-customer");\n')),(0,r.kt)("p",null,"Let's just try that out first before we move further. Let's add a ",(0,r.kt)("inlineCode",{parentName:"p"},"Dispose")," call so the browser is properly disposed at the end of the execution and run the console app."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"playwright.Dispose();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-commandline"},"dotnet run\n")),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(3012).Z,width:"1637",height:"1037"})),(0,r.kt)("h3",{id:"interacting-with-the-page"},"Interacting with the page"),(0,r.kt)("p",null,"Now that we have the page running let's go ahead and fill in and submit the data. Any interaction will be driven by ",(0,r.kt)("strong",{parentName:"p"},"Locators"),". "),(0,r.kt)("p",null,"Locators allow us to select elements in a page without having to specify the ",(0,r.kt)("em",{parentName:"p"},"exact")," Query Selector, which can be quite tricky and can get out of date, causing our tests to fail."),(0,r.kt)("p",null,"Another advantage of Locators is that when we write one, the code will wait until that items that we requested is on the page.\nThis means that we don't have to add arbitrary delays in our code for elements to pop up."),(0,r.kt)("p",null,"Let's take the ",(0,r.kt)("inlineCode",{parentName:"p"},"FullName")," field for example:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(5954).Z,width:"1842",height:"921"})),(0,r.kt)("p",null,'This item can be selected in many different ways from "give me the first ',(0,r.kt)("inlineCode",{parentName:"p"},"input"),' in the page" (which is bad) to give me the element with ',(0,r.kt)("inlineCode",{parentName:"p"},"id=fullname")," (which is good)."),(0,r.kt)("p",null,"In our case, we can simply use the ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," of the element since it's present."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'page.Locator("id=fullname");\n')),(0,r.kt)("p",null,"Now that we have the element selected we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"FillAsync")," method to set the value:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.Locator("id=fullname").FillAsync("Nick Chapsas");\n')),(0,r.kt)("p",null,"There are many different ways you can select and element with Locators."),(0,r.kt)("p",null,"Here is a quick cheat sheet:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Text selector"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'page.Locator("text=Log in");\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"CSS selector"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'page.Locator("button");\npage.Locator("#nav-bar .contact-us-item");\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Select by attribute, with css selector"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.Locator("[data-test=login-button]").ClickAsync();\nawait page.Locator("[aria-label=\'Sign in\']").ClickAsync();\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Combine css and text selectors"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.Locator("article:has-text(\\"Playwright\\")").ClickAsync();\nawait page.Locator("#nav-bar :text(\\"Contact us\\")").ClickAsync();\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Element that contains another, with css selector"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.Locator(".item-description:has(.item-promo-banner)").ClickAsync();\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Selecting based on layout, with css selector"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.Locator("input:right-of(:text(\\"Username\\"))").ClickAsync();\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Only visible elements, with css selector"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.Locator(".login-button:visible").ClickAsync();\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pick n-th match"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"await page.Locator(\":nth-match(:text('Buy'), 3)\").ClickAsync();\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"XPath selector"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.Locator("xpath=//button").ClickAsync();\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"React selector (experimental)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"await page.Locator(\"_react=ListItem[text *= 'milk' i]\").ClickAsync();\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Vue selector (experimental)"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"await page.Locator(\"_vue=list-item[text *= 'milk' i]\").ClickAsync();\n")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"For an exhaustive list check out ",(0,r.kt)("a",{parentName:"p",href:"https://playwright.dev/dotnet/docs/selectors"},"Playwright's documentation"),".")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Let's run the console app again and see what's going to happen this time."),(0,r.kt)("p",null,"With that working let's fill in the rest of the fields:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.Locator("id=email").FillAsync("nick@chapsas.com");\nawait page.Locator("id=github-username").FillAsync("nickchapsas");\nawait page.Locator("id=dob").FillAsync("1993-09-22");\n')),(0,r.kt)("p",null,'The last thing we need is to click the submit button.\nIn this case, our approach is a bit different. We know that the button has the text "Submit"\nso we can select the element by its text and use the ',(0,r.kt)("inlineCode",{parentName:"p"},"ClickAsync")," method to click the button."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'await page.Locator("text=Submit").ClickAsync();\n')),(0,r.kt)("p",null,"And that's it! We can now create a customer with an automated Playwright flow!"),(0,r.kt)("p",null,"We can now integrate Playwright in our test suite."),(0,r.kt)("h2",{id:"test-suite-integration"},"Test suite integration"),(0,r.kt)("p",null,"It's time to take everything we've learned and use it for our integration test suite."),(0,r.kt)("p",null,"First, let's create the ",(0,r.kt)("inlineCode",{parentName:"p"},"IPlaywright")," option and the ",(0,r.kt)("inlineCode",{parentName:"p"},"IBrowserContext")," object in the ",(0,r.kt)("inlineCode",{parentName:"p"},"TestingContext")," class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"private readonly IPlaywright _playwright;\n\npublic IBrowserContext Browser { get; private set; }\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Browser")," is public because it will be used by the test classes to invoke the ",(0,r.kt)("inlineCode",{parentName:"p"},"NewPageAsync")," method and create a page to run the tests on."),(0,r.kt)("p",null,"Now simply update the ",(0,r.kt)("inlineCode",{parentName:"p"},"InitializeAsync")," method to include the Browser launching:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public async Task InitializeAsync()\n{\n    GitHubApiServer.Start(9850);\n    _dockerService.Start();\n    \n    // highlight-start\n    _playwright = await Playwright.CreateAsync();\n    var browser = await _playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions\n    {\n        SlowMo = 1000,\n        Headless = false\n    });\n    \n    Browser = await browser.NewContextAsync(new BrowserNewContextOptions\n    {\n        IgnoreHTTPSErrors = true\n    });\n    // highlight-end\n}\n")),(0,r.kt)("p",null,"And the ",(0,r.kt)("inlineCode",{parentName:"p"},"DisposeAsync")," method to dispose the browser and playwright:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public async Task DisposeAsync()\n{\n    // highlight-start\n    await Browser.DisposeAsync();\n    _playwright.Dispose();\n    // highlight-end\n    _dockerService.Dispose();\n    GitHubApiServer.Dispose();\n}\n")),(0,r.kt)("p",null,"And that's it! Now it's time to take everything we've learned and write integration tests with it!"))}u.isMDXComponent=!0},6558:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/create-customer-age-75638bea6c38d16ef3654b6d2b377c6d.png"},5954:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/fullname-46c75cf7710e54a7c54b02843d7d4db6.png"},3012:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/show-browser-a9a59f50e6e1f1b9176f054bf07ef6f2.gif"}}]);