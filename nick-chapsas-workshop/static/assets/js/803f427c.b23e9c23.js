"use strict";(self.webpackChunktesting_workshop=self.webpackChunktesting_workshop||[]).push([[5360],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1407:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={description:"Why time in tests can be problematic"},a="Dealing with time",l={unversionedId:"unit-testing/deep-dive/dealing-with-time",id:"unit-testing/deep-dive/dealing-with-time",title:"Dealing with time",description:"Why time in tests can be problematic",source:"@site/docs/unit-testing/deep-dive/dealing-with-time.md",sourceDirName:"unit-testing/deep-dive",slug:"/unit-testing/deep-dive/dealing-with-time",permalink:"/unit-testing/deep-dive/dealing-with-time",draft:!1,tags:[],version:"current",frontMatter:{description:"Why time in tests can be problematic"},sidebar:"docs",previous:{title:"Exercise: The quote service",permalink:"/unit-testing/deep-dive/exercise-quote"},next:{title:"Testing internals",permalink:"/unit-testing/deep-dive/testing-internals"}},s={},u=[{value:"The problem",id:"the-problem",level:2},{value:"The solution",id:"the-solution",level:2},{value:"Exercise",id:"exercise",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dealing-with-time"},"Dealing with time"),(0,i.kt)("h2",{id:"the-problem"},"The problem"),(0,i.kt)("p",null,"Sometimes code is time sensitive. Consider the following method:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Greeter.cs"',title:'"Greeter.cs"'},'public string GenerateGreetText()\n{\n    var dateTimeNow = DateTime.Now;\n    return dateTimeNow.Hour switch\n    {\n        >= 5 and < 12 => "Good morning",\n        >= 12 and < 18 => "Good afternoon",\n        _ => "Good evening"\n    };\n}\n')),(0,i.kt)("p",null,"This method uses the current time of your workstation to determine whether it is morning, afternoon or evening and produce a message."),(0,i.kt)("p",null,"Attempting to write unit tests for this method would be impossible. If you had 1 test per usecase then only one test out of 3 would pass at one time."),(0,i.kt)("h2",{id:"the-solution"},"The solution"),(0,i.kt)("p",null,"In order to solve this problem we need to make the date time provider mockable. To achieve that let's create an interface."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public interface IDateTimeProvider\n{\n    DateTime Now { get; }\n}\n")),(0,i.kt)("p",null,"The implementation will simply point to the same property invocation:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class DateTimeProvider : IDateTimeProvider\n{\n    public DateTime Now => DateTime.Now;\n}\n")),(0,i.kt)("p",null,"We can now write a unit test that mocks the ",(0,i.kt)("inlineCode",{parentName:"p"},"IDateTimeProvider")," that we just created and returns a given date per test."),(0,i.kt)("h2",{id:"exercise"},"Exercise"),(0,i.kt)("p",null,"Implement 3 tests:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GenerateGreetText_ShouldReturnGoodMorning_WhenItsMorning")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GenerateGreetText_ShouldReturnGoodAfternoon_WhenItsAfternoon")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GenerateGreetText_ShouldReturnGoodEvening_WhenItsEvening"))),(0,i.kt)("p",null,"Expand any of the code blocks below to see the solution to the exercise but you are highly encouraged to implement the tests on your own."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"GenerateGreetText_ShouldReturnGoodMorning_WhenItsMorning"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'[Fact]\npublic void GenerateGreetText_ShouldReturnGoodMorning_WhenItsMorning()\n{\n    // Arrange\n    _dateTimeProvider.Now.Returns(new DateTime(2022, 1, 1, 9, 0, 0));\n    \n    // Act\n    var message = _greeter.GenerateGreetText();\n\n    // Assert\n    message.Should().Be("Good morning");\n}\n'))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"GenerateGreetText_ShouldReturnGoodAfternoon_WhenItsAfternoon"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'[Fact]\npublic void GenerateGreetText_ShouldReturnGoodAfternoon_WhenItsAfternoon()\n{\n    // Arrange\n    _dateTimeProvider.Now.Returns(new DateTime(2022, 1, 1, 15, 0, 0));\n    \n    // Act\n    var message = _greeter.GenerateGreetText();\n\n    // Assert\n    message.Should().Be("Good afternoon");\n}\n'))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"GenerateGreetText_ShouldReturnGoodEvening_WhenItsEvening"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'[Fact]\npublic void GenerateGreetText_ShouldReturnGoodEvening_WhenItsEvening()\n{\n    // Arrange\n    _dateTimeProvider.Now.Returns(new DateTime(2022, 1, 1, 20, 0, 0));\n    \n    // Act\n    var message = _greeter.GenerateGreetText();\n\n    // Assert\n    message.Should().Be("Good evening");\n}\n'))))}c.isMDXComponent=!0}}]);