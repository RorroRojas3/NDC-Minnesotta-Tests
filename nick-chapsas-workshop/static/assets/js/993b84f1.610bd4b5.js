"use strict";(self.webpackChunktesting_workshop=self.webpackChunktesting_workshop||[]).push([[1885],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),g=r,d=m["".concat(l,".").concat(g)]||m[g]||u[g]||i;return n?a.createElement(d,s(s({ref:t},c),{},{components:n})):a.createElement(d,s({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6358:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={description:"The API we will be using for integration tests"},s="The Customers API",o={unversionedId:"integration-testing/api/the-api",id:"integration-testing/api/the-api",title:"The Customers API",description:"The API we will be using for integration tests",source:"@site/docs/integration-testing/api/the-api.md",sourceDirName:"integration-testing/api",slug:"/integration-testing/api/the-api",permalink:"/integration-testing/api/the-api",draft:!1,tags:[],version:"current",frontMatter:{description:"The API we will be using for integration tests"},sidebar:"docs",previous:{title:"Testing an API",permalink:"/category/testing-an-api"},next:{title:"Our first integration test",permalink:"/integration-testing/api/first-integration-test"}},l={},p=[{value:"Running the API",id:"running-the-api",level:2},{value:"The endpoints",id:"the-endpoints",level:2},{value:"Creating a customer",id:"creating-a-customer",level:3},{value:"Getting all customers",id:"getting-all-customers",level:3},{value:"Getting a customer by id",id:"getting-a-customer-by-id",level:3},{value:"Updating a customer",id:"updating-a-customer",level:3},{value:"Deleting a customer",id:"deleting-a-customer",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"the-customers-api"},"The Customers API"),(0,r.kt)("p",null,"We will be writing integration tests for the following Customers API. This API is used to create customers or users in a system.\nIt uses a Postgres database to store the users and it is also calling the GitHub API to validate that the provided GitHub Username is valid."),(0,r.kt)("p",null,"In order to make calling this API easier, I have included a Postman collection in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Assets")," folder under ",(0,r.kt)("inlineCode",{parentName:"p"},"2.IntegrationTesting"),"."),(0,r.kt)("p",null,"To import the collection simply use the Import button in postman and either select or drag and drop the ",(0,r.kt)("inlineCode",{parentName:"p"},"json")," collection file."),(0,r.kt)("h2",{id:"running-the-api"},"Running the API"),(0,r.kt)("p",null,"To run the API make sure you are in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Customers.Api")," directory and run ",(0,r.kt)("inlineCode",{parentName:"p"},"docker compose -f docker-compose-full.yml up"),".\nThis will run everything including the database needed for the API to function."),(0,r.kt)("p",null,"If you want to run just the database, so you can run the API independently as we are working on it, simply do ",(0,r.kt)("inlineCode",{parentName:"p"},"docker compose up"),".\nThis approach is ",(0,r.kt)("strong",{parentName:"p"},"HIGHLY RECOMMENDED")," since we will be working on running our own version of the API as part of the testing we will be performing."),(0,r.kt)("h2",{id:"the-endpoints"},"The endpoints"),(0,r.kt)("p",null,"When the API is running, you can access the Swagger page that contains all the requests and responses at: ",(0,r.kt)("a",{parentName:"p",href:"https://localhost:5001/swagger/index.html"},"https://localhost:5001/swagger/index.html")),(0,r.kt)("h3",{id:"creating-a-customer"},"Creating a customer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"POST http://localhost:5001/customers\n")),(0,r.kt)("p",null,"Request body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "gitHubUsername": "nickchapsas",\n  "fullName": "Nick Chapsas",\n  "email": "nick@chapsas.com",\n  "dateOfBirth": "1990-01-01T13:00:00.000Z"\n}\n')),(0,r.kt)("p",null,"Example response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "f3cde51e-9b98-48a1-b6b7-870edece7e6b",\n    "gitHubUsername": "nickchapsas",\n    "fullName": "Nick Chapsas",\n    "email": "nick@chapsas.com",\n    "dateOfBirth": "1990-01-01T13:00:00"\n}\n')),(0,r.kt)("h3",{id:"getting-all-customers"},"Getting all customers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"GET http://localhost:5001/customers\n")),(0,r.kt)("p",null,"Example response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "customers": [\n        {\n            "id": "f3cde51e-9b98-48a1-b6b7-870edece7e6b",\n            "gitHubUsername": "nickchapsas",\n            "fullName": "Nick Chapsas",\n            "email": "nick@chapsas.com",\n            "dateOfBirth": "1990-01-01T13:00:00"\n        }\n    ]\n}\n')),(0,r.kt)("h3",{id:"getting-a-customer-by-id"},"Getting a customer by id"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"GET http://localhost:5001/customers/{guid}\n")),(0,r.kt)("p",null,"Example response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "f3cde51e-9b98-48a1-b6b7-870edece7e6b",\n    "gitHubUsername": "nickchapsas",\n    "fullName": "Nick Chapsas",\n    "email": "nick@chapsas.com",\n    "dateOfBirth": "1990-01-01T13:00:00"\n}\n')),(0,r.kt)("h3",{id:"updating-a-customer"},"Updating a customer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"PUT http://localhost:5001/customers/{guid}\n")),(0,r.kt)("p",null,"Request body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "gitHubUsername": "nickchapsas",\n    "fullName": "Nick Chapsas",\n    "email": "nick@chapsas.com",\n    "dateOfBirth": "1990-02-01T13:00:00"\n}\n')),(0,r.kt)("p",null,"Example response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "f3cde51e-9b98-48a1-b6b7-870edece7e6b",\n    "gitHubUsername": "nickchapsas",\n    "fullName": "Nick Chapsas",\n    "email": "nick@chapsas.com",\n    "dateOfBirth": "1990-02-01T13:00:00"\n}\n')),(0,r.kt)("h3",{id:"deleting-a-customer"},"Deleting a customer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http",metastring:"request",request:!0},"DELETE http://localhost:5001/customers/{guid}\n")))}u.isMDXComponent=!0}}]);