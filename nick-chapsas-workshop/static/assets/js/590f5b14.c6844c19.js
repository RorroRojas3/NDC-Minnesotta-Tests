"use strict";(self.webpackChunktesting_workshop=self.webpackChunktesting_workshop||[]).push([[4902],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,a(a({ref:t},l),{},{components:n})):r.createElement(f,a({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={description:"The Quote Service we'll be testing"},a="The QuoteService",u={unversionedId:"unit-testing/deep-dive/quote-service",id:"unit-testing/deep-dive/quote-service",title:"The QuoteService",description:"The Quote Service we'll be testing",source:"@site/docs/unit-testing/deep-dive/quote-service.md",sourceDirName:"unit-testing/deep-dive",slug:"/unit-testing/deep-dive/quote-service",permalink:"/unit-testing/deep-dive/quote-service",draft:!1,tags:[],version:"current",frontMatter:{description:"The Quote Service we'll be testing"},sidebar:"docs",previous:{title:"The Foreign Exchange API",permalink:"/unit-testing/deep-dive/api-intro"},next:{title:"Trying to write a test",permalink:"/unit-testing/deep-dive/attempting-test"}},c={},s=[],l={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"the-quoteservice"},"The QuoteService"),(0,o.kt)("p",null,"In this section of the workshop we will be focusing on unit testing one particular class, the ",(0,o.kt)("inlineCode",{parentName:"p"},"QuoteService")," which can be found in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Services")," folder.\nThis class contains 4 main aspects that you should know how to unit test because they appear over and over again in all code-bases."),(0,o.kt)("p",null,"Those are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A returned value"),(0,o.kt)("li",{parentName:"ul"},"An IO call, in this case a database call"),(0,o.kt)("li",{parentName:"ul"},"An exception thrown"),(0,o.kt)("li",{parentName:"ul"},"A method invocation that doesn't return anything")),(0,o.kt)("p",null,"All of these aspects lead to code paths that we need to assert against but the means to do so isn't always obvious."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"GetQuoteAsync")," method will be what we will be focusing on:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'public async Task<ConversionQuote?> GetQuoteAsync(string fromCurrency, string toCurrency, decimal amount)\n{\n    var sw = Stopwatch.StartNew();\n    try\n    {\n        if (amount <= 0)\n        {\n            throw new NegativeAmountException();\n        }\n        \n        if (fromCurrency == toCurrency)\n        {\n            throw new SameCurrencyException(fromCurrency);\n        }\n    \n        var rate = await _ratesRepository.GetRateAsync(fromCurrency, toCurrency);\n\n        if (rate is null)\n        {\n            return null;\n        }\n\n        var quoteAmount = rate.Rate * amount;\n    \n        return new ConversionQuote\n        {\n            BaseCurrency = fromCurrency,\n            QuoteCurrency = toCurrency,\n            BaseAmount = amount,\n            QuoteAmount = quoteAmount\n        };\n    }\n    finally\n    {\n        _logger.LogInformation(\n            "Retrieved quote for currencies {FromCurrency}->{ToCurrency} in {ElapsedMilliseconds}ms",\n            fromCurrency, toCurrency, sw.ElapsedMilliseconds);\n    }\n}\n')))}p.isMDXComponent=!0}}]);